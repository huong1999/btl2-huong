public void saveScore(){
		boolean tmp=true;
		System.out.println();
		if(mBomber.getScore()>arrHightScore.get(arrHightScore.size()-1).getScore()) {
			while (tmp==true) {
			String name = JOptionPane.showInputDialog("Mời nhập tên của bạn");            //thong bao nhap ten diem cao
				if (name.length() <= 10) {
					arrHightScore.add(new HightScore(name, mBomber.getScore()));        //them dong text vua nhap vao arrlist hightscore
					JOptionPane.showMessageDialog(null, "Tên của bạn đã được thêm vào HighScore!!!");
					tmp=false;
				}
				else {
					JOptionPane.showMessageDialog(null, "Ban khong duoc nhap qua 10 ki tu");
					tmp = true;
				}
			}
		}
		Collections.sort(arrHightScore, new Comparator<HightScore>() {				//sap xep hightscore

			@Override
			public int compare(HightScore score1, HightScore score2) {
				if(score1.getScore()<score2.getScore()){
					return 1;
				}else{
					if(score1.getScore()==score2.getScore()){
						return 0;
					}else{
						return -1;
					}
				}
			}
		});

		if(arrHightScore.size()>10){
			arrHightScore.remove(arrHightScore.size()-1);
		}

		try {
			FileOutputStream fileOutput = new FileOutputStream("src/hightscore/HightScore.txt");
			for(int i=0;i<arrHightScore.size();i++){
				String content = arrHightScore.get(i).getName()+":"+arrHightScore.get(i).getScore()+"\n";
				fileOutput.write(content.getBytes());
			}
		} catch (IOException e ) {
			e.printStackTrace();
		}
	}
